/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.11
 * Generated at: 2018-09-30 16:29:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Calendar;
import java.util.*;

public final class Project2_005f2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Calendar");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Project2_2</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body >\r\n");
      out.write("\r\n");


int r=7;
int c=7;
int i;
java.util.Calendar cal=java.util.Calendar.getInstance(); 
String srtyear=request.getParameter("year");
String srtmonth=request.getParameter("month");
String srtdate=request.getParameter("date");

int year=cal.get(java.util.Calendar.YEAR);
int month=cal.get(java.util.Calendar.MONTH);
int date=cal.get(java.util.Calendar.DATE);
int l=date;
if(srtyear!=null){
	year=Integer.parseInt(srtyear);
	month=Integer.parseInt(srtmonth);
	date=Integer.parseInt(srtdate);
}
String today=year+"-"+(month+1)+"-"+l;
cal.set(year,month,1);
int count=cal.getActualMaximum(Calendar.DAY_OF_MONTH);
int st=cal.get(Calendar.DAY_OF_WEEK);

out.write("<div>");
out.write("<h2><div style=\"border :1px solid white; float: left; width: 33%; text-align:left;\">");
out.write("<a href=\"./Project2_2.jsp?year="+(year-1)+"&month="+month+"&date="+date+"\">◀&nbsp;</a>");
out.write(year+"년");
out.write("<a href=\"./Project2_2.jsp?year="+(year+1)+"&month="+month+"&date="+date+"\">&nbsp;▶</a></div></h2>");                   //년

out.write("<h2><div style=\"border :1px solid white; float: left; width: 33%;text-align:center;\">");
out.write("<a href=\"./Project2_2.jsp?year="+year+"&month="+((month==0)?month:(month-1))+"&date="+date+"\">◀&nbsp;</a>");
out.write((month+1)+"월");
out.write("<a href=\"./Project2_2.jsp?year="+year+"&month="+((month==11)?month:(month+1))+"&date="+date+"\">&nbsp;▶</a></div></h2>");                  //월

out.write("<h2><div style=\"border :1px solid white; float: left; width: 33%;text-align : right;\">"+today+"</div></h2>");            //오늘날짜 

out.write("</div>");

out.write("<TABLE border=\"1px solid black\" >"); out.write("<TR>");
out.write("<Th>일</Th>");
out.write("<Th>월</Th>");
out.write("<Th>화</Th>");
out.write("<Th>수</Th>");
out.write("<Th>목</Th>");
out.write("<Th>금</Th>");
out.write("<Th>토</Th>");
out.write("</TR>");

r=r-1;
Boolean p=true;
int start=0;
out.write("<style> table,th,td{border-collapse : collapse} table{width:100%} table{height:300px}</style>");
loop1 :for(i=0;i<r;i++){
	
	out.write("<TR>");
	for(int j=0;j<c;j++){
		if(start==count)
			break loop1;
		start+=1;
		
		if(p==true){
		for(int k=1;k<st;k++){
			out.write("<Th></Th>");
			j++;
			p=false;
			}
		
		
		}
		out.write("<Th>");
		out.print(start);
		out.write("</Th>");
		
		
	}
	out.write("</TR>");

}


out.write("</TABLE>");
out.write("<h2><div style=\"border :1px solid white; float: left;text-align : right;\"><a href=\"./Project2_2.jsp\">초기화</a></div></h2>");


      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
